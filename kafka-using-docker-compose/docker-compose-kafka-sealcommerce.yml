x-restart-policy: &restart_policy
    restart: unless-stopped
x-depends_on-healthy: &depends_on-healthy
    condition: service_healthy
x-healthcheck-defaults: &healthcheck_defaults
    # Avoid setting the interval too small, as docker uses much more CPU than one would expect.
    # Related issues:
    # https://github.com/moby/moby/issues/39102
    # https://github.com/moby/moby/issues/39388
    # https://github.com/getsentry/self-hosted/issues/1000
    interval: "${HEALTHCHECK_INTERVAL:-10s}"
    timeout: "${HEALTHCHECK_TIMEOUT:-1m}"
    retries: ${HEALTHCHECK_RETRIES:-10}
    start_period: 10s

services:
    kafka-ui:
        <<: *restart_policy
        depends_on:
            zookeeper:
                <<: *depends_on-healthy
            kafka:
                <<: *depends_on-healthy
        container_name: kafka-ui
        mem_limit: ${KAFKA_UI_MEM_LIMIT:-512M}
        image: provectuslabs/kafka-ui:v0.7.2
        ports:
            - 8080:8080
        environment:
            KAFKA_CLUSTERS_0_NAME: ${CLUSTER_NAME:-local}
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
            KAFKA_CLUSTERS_0_METRICS_PORT: 9997
            DYNAMIC_CONFIG_ENABLED: 'true'
            AUTH_TYPE: "none" # AUTH_TYPE: "LOGIN_FORM"
            #      SPRING_SECURITY_USER_NAME: ${SPRING_SECURITY_USER_NAME:-admin}
            #      SPRING_SECURITY_USER_PASSWORD: ${SPRING_SECURITY_USER_PASSWORD:-pass}
            LOGGING_LEVEL_ROOT: warn
            LOGGING_LEVEL_COM_PROVECTUS: warn

    zookeeper:
        <<: *restart_policy
        image: confluentinc/cp-zookeeper:7.6.1
        container_name: zookeeper
        mem_limit: ${ZOOKEEPER_MEM_LIMIT:-256M}
        ports:
            - 2181:2181
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: "WARN"
            ZOOKEEPER_TOOLS_LOG4J_LOGLEVEL: "WARN"
            KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
        ulimits:
            nofile:
                soft: 4096
                hard: 4096
        volumes:
            - "zookeeper:/var/lib/zookeeper/data"
            - "zookeeper-log:/var/lib/zookeeper/log"
            - "secrets:/etc/zookeeper/secrets"
        healthcheck:
            <<: *healthcheck_defaults
            test:
              [ "CMD-SHELL", 'echo "ruok" | nc -w 2 localhost 2181 | grep imok' ]

    kafka:
        <<: *restart_policy
        depends_on:
            zookeeper:
                <<: *depends_on-healthy
        image: confluentinc/cp-kafka:7.6.1
        hostname: kafka
        container_name: kafka
        mem_limit: ${KAFKA_MEM_LIMIT:-1024M}
        ports:
            - "9092:9092"
            - "9997:9997"
        environment:
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://${KAFKA_HOST:-localhost}:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
            KAFKA_LOG_CLEANUP_POLICY: delete
            KAFKA_LOG_RETENTION_MS: ${KAFKA_LOG_RETENTION_MS:-600000}
            KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: ${KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS:-60000}
            KAFKA_LOG_ROLL_HOURS: ${KAFKA_LOG_ROLL_HOURS:-24}
            KAFKA_LOG_SEGMENT_BYTES: ${KAFKA_LOG_SEGMENT_BYTES:-1073741824}
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9997
            KAFKA_JMX_HOSTNAME: kafka
            KAFKA_LOG4J_LOGGERS: "kafka.cluster=WARN,kafka.controller=WARN,kafka.coordinator=WARN,kafka.log=WARN,kafka.server=WARN,kafka.zookeeper=WARN,state.change.logger=WARN"
            KAFKA_LOG4J_ROOT_LOGLEVEL: "WARN"
            KAFKA_TOOLS_LOG4J_LOGLEVEL: "WARN"
        ulimits:
            nofile:
                soft: 4096
                hard: 4096
        volumes:
            - "kafka:/var/lib/kafka/data"
            - "kafka-log:/var/lib/kafka/log"
            - "secrets:/etc/kafka/secrets"
        healthcheck:
            <<: *healthcheck_defaults
            test: [ "CMD-SHELL", "nc -z localhost 9092" ]
            interval: 10s
            timeout: 10s
            retries: 30

volumes:
    kafka:
    zookeeper:
    kafka-log:
    zookeeper-log:
    secrets:
